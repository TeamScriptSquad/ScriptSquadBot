import telebot
from telebot import types

token = '8154534703:AAHLLUapRWpb3yh-JPOirGp_DAYy4gy-dOM'
bot = telebot.TeleBot(token)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}


@bot.message_handler(commands=['start'])
def main(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton('üì¢ –†–µ–∫–ª–∞–º–∞', callback_data='advertising')
    btn2 = types.InlineKeyboardButton('üõ† –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É', callback_data='order_service')
    btn3 = types.InlineKeyboardButton('ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ', callback_data='partnership')
    markup.row(btn1, btn2)
    markup.row(btn3)

    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:',
                     reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if callback.data == 'advertising':
        bot.send_message(callback.message.chat.id,
                         'üì¢ –†–µ–∫–ª–∞–º–Ω—ã–µ —É—Å–ª—É–≥–∏:\n- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã\n- –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞\n- SMM –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ\n\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º @RodionScriptSquad')
    elif callback.data == 'order_service':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('üåê –°–∞–π—Ç—ã', callback_data='sites')
        btn2 = types.InlineKeyboardButton('ü§ñ –ë–æ—Ç—ã', callback_data='bots')
        btn3 = types.InlineKeyboardButton('üéÆ –ò–≥—Ä—ã', callback_data='games')
        btn4 = types.InlineKeyboardButton('üìà –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', callback_data='marketing')
        btn5 = types.InlineKeyboardButton('üì¢ –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤', callback_data='channel_management')
        btn6 = types.InlineKeyboardButton('üíª –°–æ—Ñ—Ç/–ü—Ä–æ–≥—Ä–∞–º–º—ã', callback_data='software')
        btn7 = types.InlineKeyboardButton('üë• –ò–Ω–≤–∞–π—Ç–∏–Ω–≥', callback_data='inviting')
        btn8 = types.InlineKeyboardButton('‚ùì –î—Ä—É–≥–æ–µ', callback_data='other_services')
        markup.row(btn1, btn2)
        markup.row(btn3, btn4)
        markup.row(btn5, btn6)
        markup.row(btn7, btn8)
        bot.send_message(callback.message.chat.id, 'üõ† –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —É—Å–ª—É–≥–∏:', reply_markup=markup)
    elif callback.data == 'partnership':
        bot.send_message(callback.message.chat.id,
                         'ü§ù –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:\n- –°–æ–≤–º–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã\n- –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã\n- White Label —Ä–µ—à–µ–Ω–∏—è\n\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º @RodionScriptSquad')

    # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —É—Å–ª—É–≥
    elif callback.data == 'sites':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('–í—ë—Ä—Å—Ç–∫–∞ —Å–∞–π—Ç–æ–≤', callback_data='web_development')
        btn2 = types.InlineKeyboardButton('–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', callback_data='web_apps')
        markup.row(btn1, btn2)
        bot.send_message(callback.message.chat.id, 'üåê –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–µ–±-—É—Å–ª—É–≥–∏:', reply_markup=markup)

    elif callback.data == 'bots':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('–ú–∞—Å—Å–ª—É–∫–∏–Ω–≥ –±–æ—Ç—ã', callback_data='masslooking')
        btn2 = types.InlineKeyboardButton('–ù–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥', callback_data='neurocommenting')
        btn3 = types.InlineKeyboardButton('–î—Ä—É–≥–∏–µ –≤–∏–¥—ã –±–æ—Ç–æ–≤', callback_data='other_bots')
        markup.row(btn1, btn2)
        markup.row(btn3)
        bot.send_message(callback.message.chat.id, 'ü§ñ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±–æ—Ç–∞:', reply_markup=markup)

    # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è "–î—Ä—É–≥–æ–µ"
    elif callback.data == 'other_services':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('üìÇ –°–±–æ—Ä –ø–∞–ø–∫–∏ –ø–æ —Ç–µ–º–∞—Ç–∏–∫–µ', callback_data='folder_collection')
        btn2 = types.InlineKeyboardButton('üîç –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö', callback_data='parsing')
        btn3 = types.InlineKeyboardButton('üé® –î–∏–∑–∞–π–Ω (–ø–æ—Å—Ç—ã/–≥—Ä—É–ø–ø—ã)', callback_data='design')
        btn4 = types.InlineKeyboardButton('üòä –°—Ç–∏–∫–µ—Ä—ã/–≠–º–æ–¥–∑–∏', callback_data='stickers')
        markup.row(btn1, btn2)
        markup.row(btn3, btn4)
        bot.send_message(callback.message.chat.id, 'üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏:', reply_markup=markup)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —É—Å–ª—É–≥
    service_names = {
        'web_development': '–í—ë—Ä—Å—Ç–∫–∞ —Å–∞–π—Ç–æ–≤',
        'web_apps': '–°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
        'masslooking': '–ë–æ—Ç—ã –¥–ª—è –º–∞—Å—Å–ª—É–∫–∏–Ω–≥–∞',
        'neurocommenting': '–ë–æ—Ç—ã —Å –Ω–µ–π—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏–Ω–≥–æ–º',
        'other_bots': '–î—Ä—É–≥–∏–µ –≤–∏–¥—ã –±–æ—Ç–æ–≤',
        'games': '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä',
        'marketing': '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ —É—Å–ª—É–≥–∏',
        'channel_management': '–í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤',
        'software': '–ù–∞–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ñ—Ç–∞/–ø—Ä–æ–≥—Ä–∞–º–º',
        'inviting': '–ò–Ω–≤–∞–π—Ç–∏–Ω–≥',
        'folder_collection': '–°–±–æ—Ä –ø–∞–ø–∫–∏ –ø–æ –≤–∞—à–µ–π —Ç–µ–º–∞—Ç–∏–∫–µ',
        'parsing': '–ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö',
        'design': '–î–∏–∑–∞–π–Ω –ø–æ—Å—Ç–æ–≤/–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã',
        'stickers': '–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–æ–≤ –∏–ª–∏ —ç–º–æ–¥–∑–∏'
    }

    if callback.data in service_names:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_states[callback.from_user.id] = {
            'service': service_names[callback.data],
            'waiting_for_description': True
        }

        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', callback_data='skip_description')
        markup.add(btn)

        bot.send_message(
            callback.message.chat.id,
            f'‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏: {service_names[callback.data]}\n\n'
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"):',
            reply_markup=markup
        )

    elif callback.data == 'skip_description':
        if callback.from_user.id in user_states:
            service = user_states[callback.from_user.id]['service']
            del user_states[callback.from_user.id]  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É
            manager_chat_id = -1002293114929  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π chat_id –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            bot.send_message(
                manager_chat_id,
                f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É—Å–ª—É–≥—É: {service}\n'
                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{callback.from_user.username or callback.from_user.first_name}\n'
                f'ID: {callback.from_user.id}\n'
                '–û–ø–∏—Å–∞–Ω–∏–µ: –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ'
            )

            bot.send_message(
                callback.message.chat.id,
                '‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!\n\n'
                '–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –º–µ–Ω–µ–¥–∂–µ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n'
                '–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ @RodionScriptSquad\n—ã\n'
                '–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ /start'
            )


@bot.message_handler(content_types=['text'])
def handle_text(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if message.from_user.id in user_states and user_states[message.from_user.id]['waiting_for_description']:
        service = user_states[message.from_user.id]['service']
        user_description = message.text
        del user_states[message.from_user.id]  # –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        # 1. –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            message.chat.id,
            '‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.\n\n'
            f'<b>–£—Å–ª—É–≥–∞:</b> {service}\n'
            f'<b>–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b> {user_description}\n\n'
            '–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –º–µ–Ω–µ–¥–∂–µ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n'
            '–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ @RodionScriptSquad\n\n'
            '–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ /start',
            parse_mode='HTML'
        )
        try:
            bot.send_message(
                -1002293114929,  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π chat_id –º–µ–Ω–µ–¥–∂–µ—Ä–∞
                f'üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É—Å–ª—É–≥—É:\n\n'
                f'<b>–£—Å–ª—É–≥–∞:</b> {service}\n'
                f'<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{message.from_user.username or message.from_user.first_name}\n'
                f'<b>ID:</b> {message.from_user.id}\n'
                f'<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n{user_description}',
                parse_mode='HTML'
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É: {e}")

    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∑–∞–∫–∞–∑–æ–º —É—Å–ª—É–≥–∏
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton('–ú–µ–Ω—é —É—Å–ª—É–≥', callback_data='order_service')
        markup.add(btn)

        bot.send_message(
            message.chat.id,
            "‚ÑπÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.\n"
            "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
            reply_markup=markup
        )


bot.infinity_polling()

